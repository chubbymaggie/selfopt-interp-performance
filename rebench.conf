# -*- mode: yaml -*-
# Config file for ReBench
standard_experiment: all
standard_data_file: 'data/benchmark.data'

statistics:
    confidence_level: 0.95

runs:
    number_of_data_points: 10

# reporting:
#     irc:
#         server:  chat.freenode.net
#         port:    6666
#         channel: '#som'
#         nick:    rebench-mtvspe
#         notify:  smarr ## users to be named
#         log_events:
#             - job_completed
#             - run_failed
#             - run_completed


quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    steady-trufflesom:
        gauge_adapter: RebenchLog
        command: &SOM_CMD " -cp Smalltalk:Examples/Benchmarks/Json:Examples/Benchmarks/LanguageFeatures:Examples/Benchmarks/GraphSearch:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue:Examples/Benchmarks/NBody Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values: &TSOM_EXP
            - baseline
            - minimal
            - without-args-in-frame
            - without-array-strategies
            - without-blocks-without-context
            - without-catch-nonlocal-return-node
            - without-control-specialization
            - without-custom-PICs
            - without-eager-primitives
            - without-global-caching-and-opt
            - without-local-nonlocal-var-distinction
            - without-object-layout
            - without-unessential-lowering-prims
            - without-var-access-specialization
        benchmarks: &FULL_WARMUP
            - DeltaBlue:
                extra_args: "1000 0 6000"
            - Fannkuch:
                extra_args: "500 0 9"
            - Mandelbrot:
                extra_args: "500 0 1500"
            - Richards:
                extra_args: "500 0 100"
            - NBody:
                extra_args: "500 0 250000"
            - Json:
                extra_args: "500 0 500"
            - GraphSearch:
                extra_args: "500 0 100"
            - PageRank:
                extra_args: "500 0 2000"

            - Bounce:
                extra_args: "500 0 200"
            - BubbleSort:
                extra_args: "500 0 300"
            - Permute:
                extra_args: "500 0 300"
            - Queens:
                extra_args: "500 0 200"
            - QuickSort:
                extra_args: "1000 0 300"
            - Sieve:
                extra_args: "500 0 500"
            - Storage:
                extra_args: "500 0 200"
            - Towers:
                extra_args: "500 0 200"

            - IntegerLoop:
                extra_args: "500 0 800"
            - FieldLoop:
                extra_args: "500 0 300"
            - WhileLoop:
                extra_args: "500 0 3000"

    steady-java:
        gauge_adapter: RebenchLog
        command: " -cp classic-benchmarks/classic-benchmarks.jar som.%(benchmark)s "
        max_runtime: 60000
        benchmarks: *FULL_WARMUP

    steady-trufflesom-interp:
        gauge_adapter: RebenchLog
        command: *SOM_CMD
        max_runtime: 60000
        variable_values: *TSOM_EXP
        benchmarks: &SMALL_WARMUP
            - DeltaBlue:
                extra_args: "200 0 600"
            - Fannkuch:
                extra_args: "200 0 7"
            - Mandelbrot:
                extra_args: "200 0 80"
            - Richards:
                extra_args: "200 0 1"
            - NBody:
                extra_args: "200 0 2500"
            - Json:
                extra_args: "200 0 5"
            - GraphSearch:
                extra_args: "200 0 20"
            - PageRank:
                extra_args: "200 0 600"

            - Bounce:
                extra_args: "200 0 40"
            - BubbleSort:
                extra_args: "200 0 60"
            - Permute:
                extra_args: "200 0 40"
            - Queens:
                extra_args: "200 0 30"
            - QuickSort:
                extra_args: "200 0 40"
            - Sieve:
                extra_args: "200 0 50"
            - Storage:
                extra_args: "200 0 30"
            - Towers:
                extra_args: "200 0 12"

            - IntegerLoop:
                extra_args: "200 0 8"
            - FieldLoop:
                extra_args: "200 0 3"
            - WhileLoop:
                extra_args: "200 0 30"


    steady-java-interp:
        gauge_adapter: RebenchLog
        command: " -cp classic-benchmarks/classic-benchmarks.jar som.%(benchmark)s "
        max_runtime: 60000
        benchmarks: *SMALL_WARMUP

    steady-rtrufflesom:
        gauge_adapter: RebenchLog
        command: *SOM_CMD
        max_runtime: 60000
        variable_values: &RSOM_EXP
            - baseline
            - minimal
            - without-array-strategies
            - without-blocks-without-context
            - without-catch-nonlocal-return-node
            - without-control-specialization
            - without-custom-PICs
            - without-global-caching-and-opt
            - without-local-nonlocal-var-distinction
            - without-object-layout
            - without-splitting-frame-variables
            - without-unessential-lowering-prims
        benchmarks: *FULL_WARMUP
    
    steady-rtrufflesom-interp:
        gauge_adapter: RebenchLog
        command: *SOM_CMD
        max_runtime: 60000
        variable_values: *RSOM_EXP
        benchmarks: *SMALL_WARMUP

    macro-steady-trufflesom-fluctuations:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            # - without-catch-nonlocal-return-node
            - without-execute-void
        cores: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
        benchmarks:
            - DeltaBlue:
                extra_args: "800 0 6000"
            # - Mandelbrot:
#                 extra_args: "1500 0 400"
            - Richards:
                extra_args: "800 0 100"
            # - BubbleSort:
#                 extra_args: "1500 0 300"
            - Permute:
                extra_args: "800 0 300"


# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:
    TruffleSOM-graal-experiments:
        path: implementations/T-%(variable)s
        binary: ../graal.sh
        args: "-Xms2048m -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"
    TruffleSOM-graal-nobg-compilation:
        path: implementations/T-%(variable)s
        binary: ../graal.sh
        args: "-Xms2048m -G:-TruffleBackgroundCompilation -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"
    TruffleSOM-interp-experiments:
        path: implementations/T-%(variable)s
        binary: som.sh
    
    # Do not use interp-graal, because the additional book-keeping done by Graal makes it slow.
    # And, since we use the special interpreter-only binary for RTruffleSOM as well, using plain Java seems to be more comparable.
    #TruffleSOM-interp-graal-experiments:
    #    path: implementations/T-%(variable)s
    #    binary: ../graal.sh
    #    args: "-G:TruffleCompileOnly=__something_that_really_doesnt_exist__so_that_nothing_is_compiled__ -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"

    RTruffleSOM-jit-experiments:
        path: implementations/R-%(variable)s
        binary: RTruffleSOM-jit
    RTruffleSOM-interp-experiments:
        path: implementations/R-%(variable)s
        binary: RTruffleSOM-no-jit
    Java:
        path: implementations
        binary: java8.sh
        args: "-Xms2048m -server "
    Java-interp:
        path: implementations
        binary: java8.sh
        args: "-Xms2048m -Xint "

experiments:
    main:
        description: The main evaluation of the experiments for interpreter and peak performance
        executions:
            - RTruffleSOM-jit-experiments:
                benchmark:  steady-rtrufflesom
            - RTruffleSOM-interp-experiments:
                benchmark:  steady-rtrufflesom-interp
            - TruffleSOM-interp-experiments:
                benchmark:  steady-trufflesom-interp
            - TruffleSOM-graal-experiments:
                benchmark:  steady-trufflesom
    fluctuations:
        benchmark: macro-steady-trufflesom-fluctuations
        executions:
            - TruffleSOM-graal-nobg-compilation
    java:
        description: Compare to Java to get a feeling for the performance difference.
        executions:
            - Java:
                benchmark: steady-java
            - Java-interp:
                benchmark: steady-java-interp
