# -*- mode: yaml -*-
# Config file for ReBench
standard_experiment: all
standard_data_file: 'data/benchmark.data'

statistics:
    confidence_level: 0.95

runs:
    number_of_data_points: 10

# reporting:
#     irc:
#         server:  chat.freenode.net
#         port:    6666
#         channel: '#som'
#         nick:    rebench-mtvspe
#         notify:  smarr ## users to be named
#         log_events:
#             - job_completed
#             - run_failed
#             - run_completed


quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    macro-steady-som:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        benchmarks:
            - DeltaBlue:
                extra_args: "75 0 6000"
                warmup: 65
            - Fannkuch:
                extra_args: "20 0 9"
                warmup: 10
            - Mandelbrot:
                extra_args: "50 0 1500"
                warmup: 40
            - Richards:
                extra_args: "15 0 100"
                warmup: 5

    macro-steady-trufflesom:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            - without-control-specialization
            - without-global-caching-and-opt
            - without-var-access-specialization
            - without-args-in-frame
            - without-custom-PICs
            - without-local-nonlocal-var-distinction
            - without-blocks-without-context
            - without-eager-primitives
            - without-object-layout
            - without-catch-nonlocal-return-node
            - without-execute-void
            - without-unessential-lowering-prims
        benchmarks: &FULL_WARMUP
            - DeltaBlue:
                extra_args: "1500 0 6000"
            - Fannkuch:
                extra_args: "1500 0 9"
            - Mandelbrot:
                extra_args: "1500 0 1500"
            - Richards:
                extra_args: "1500 0 100"
            - Bounce:
                extra_args: "1500 0 200"
            - BubbleSort:
                extra_args: "1500 0 300"
            - Permute:
                extra_args: "1500 0 300"
            - Queens:
                extra_args: "1500 0 200"
            - QuickSort:
                extra_args: "1500 0 300"
            - Sieve:
                extra_args: "1500 0 500"
            - Storage:
                extra_args: "1500 0 200"
            - Towers:
                extra_args: "1500 0 200"

    macro-steady-trufflesom-fluctuations:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            # - without-catch-nonlocal-return-node
            - without-execute-void
        cores: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
        benchmarks:
            - DeltaBlue:
                extra_args: "800 0 6000"
            # - Mandelbrot:
#                 extra_args: "1500 0 400"
            - Richards:
                extra_args: "800 0 100"
            # - BubbleSort:
#                 extra_args: "1500 0 300"
            - Permute:
                extra_args: "800 0 300"
    
    macro-steady-trufflesom-interp:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            - without-control-specialization
            - without-global-caching-and-opt
            - without-var-access-specialization
            - without-args-in-frame
            - without-custom-PICs
            - without-local-nonlocal-var-distinction
            - without-blocks-without-context
            - without-eager-primitives
            - without-object-layout
            - without-catch-nonlocal-return-node
            - without-execute-void
            - without-unessential-lowering-prims
        benchmarks: &SMALL_WARMUP
            - DeltaBlue:
                extra_args: "200 0 600"
            - Fannkuch:
                extra_args: "500 0 7"
            - Mandelbrot:
                extra_args: "200 0 80"
            - Richards:
                extra_args: "990 0 1"
            - Bounce:
                extra_args: "200 0 40"
            - BubbleSort:
                extra_args: "200 0 60"
            - Permute:
                extra_args: "200 0 40"
            - Queens:
                extra_args: "500 0 30"
            - QuickSort:
                extra_args: "200 0 40"
            - Sieve:
                extra_args: "200 0 50"
            - Storage:
                extra_args: "200 0 30"
            - Towers:
                extra_args: "500 0 12"

    macro-steady-rtrufflesom:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            #- without-args-in-frame
            - without-blocks-without-context
            - without-catch-nonlocal-return-node
            - without-control-specialization
            - without-custom-PICs
            #- without-eager-primitives
            - without-execute-void
            - without-global-caching-and-opt
            - without-local-nonlocal-var-distinction
            #- without-object-layout
            - without-splitting-frame-variables
            #- without-var-access-specialization
            #- without-unessential-lowering-prims
        benchmarks: *FULL_WARMUP
    
    macro-steady-rtrufflesom-interp:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        variable_values:
            - baseline
            #- without-args-in-frame
            - without-blocks-without-context
            - without-catch-nonlocal-return-node
            - without-control-specialization
            - without-custom-PICs
            #- without-eager-primitives
            - without-execute-void
            - without-global-caching-and-opt
            - without-local-nonlocal-var-distinction
            #- without-object-layout
            - without-splitting-frame-variables
            #- without-var-access-specialization
            #- without-unessential-lowering-prims
        benchmarks: *SMALL_WARMUP


    macro-steady-som-interp:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        benchmarks:
            - DeltaBlue:
                extra_args: "20 0 6000"
                warmup: 10
            - Fannkuch:
                extra_args: "20 0 8"
                warmup: 10
            - Mandelbrot:
                extra_args: "20 0 500"
                warmup: 10
            - Richards:
                extra_args: "20 0 100"
                warmup: 10
            
    macro-startup:
        gauge_adapter: RebenchLog
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        benchmarks:
            - DeltaBlue:
                extra_args: "1 0 6000"
            - Fannkuch:
                extra_args: "1 0 8"
            - Mandelbrot:
                extra_args: "1 0 500"
            - Richards:
                extra_args: "1 0 100"


# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:
    TruffleSOM-interp:
        path: implementations/TruffleSOM/
        binary: som.sh
    #TruffleSOM-interp-graal:
    #    path: implementations/TruffleSOM/
    #    binary: graal.sh
    #    args: "-G:TruffleCompileOnly=__something_that_really_doesnt_exist__so_that_nothing_is_compiled__ -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:../graal/truffle.jar som.vm.Universe"
    
    TruffleSOM-graal:
        path: implementations/TruffleSOM/
        binary: graal.sh
        args: "-G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:../graal/truffle.jar som.vm.Universe"
    TruffleSOM-graal-no-split:
        path: implementations/TruffleSOM/
        binary: ../graal.sh
        args: "-G:-TraceTruffleInlining -G:-TraceTruffleCompilation -G:-TruffleSplittingEnabled -Xbootclasspath/a:build/classes:../graal/truffle.jar som.vm.Universe"
    RTruffleSOM-interp:
        path: implementations/RTruffleSOM
        binary: RTruffleSOM-no-jit
    RTruffleSOM-jit:
        path: implementations/RTruffleSOM
        binary: RTruffleSOM-jit

    
    TruffleSOM-graal-experiments:
        path: implementations/T-%(variable)s
        binary: ../graal.sh
        args: "-Xms2048m -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"        

    TruffleSOM-graal-nobg-compilation:
        path: implementations/T-%(variable)s
        binary: ../graal.sh
        args: "-Xms2048m -G:-TruffleBackgroundCompilation -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"        


    TruffleSOM-interp-experiments:
        path: implementations/T-%(variable)s
        binary: som.sh
    # Do not use interp-graal, because the additional book-keeping done by Graal makes it slow.
    # And, since we use the special interpreter-only binary for RTruffleSOM as well, using plain Java seems to be more comparable.
    #TruffleSOM-interp-graal-experiments:
    #    path: implementations/T-%(variable)s
    #    binary: ../graal.sh
    #    args: "-G:TruffleCompileOnly=__something_that_really_doesnt_exist__so_that_nothing_is_compiled__ -G:+TruffleCompilationExceptionsAreFatal -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:graal/build/truffle.jar som.vm.Universe"

    RTruffleSOM-jit-experiments:
        path: implementations/R-%(variable)s
        binary: RTruffleSOM-jit
    RTruffleSOM-interp-experiments:
        path: implementations/R-%(variable)s
        binary: RTruffleSOM-no-jit

experiments:
    SOM:
        description: Benchmarks on SOM implementations
        benchmark:
            - macro-steady-som
        executions:
            - TruffleSOM-graal
            - TruffleSOM-graal-no-split
            - RTruffleSOM-jit
            - RPySOM-jit
    SOM-interp:
        benchmark: macro-steady-som-interp
        executions:
            - TruffleSOM-interp
            - RTruffleSOM-interp
            - RPySOM-interp
            - SOM-interp
    SOM-startup:
         benchmark: macro-startup
         executions:
             - SOM++-interp
    SOM-steady-trufflesom:
        benchmark:  macro-steady-trufflesom
        executions: TruffleSOM-graal-experiments
    SOM-steady-rtrufflesom:
        benchmark:  macro-steady-rtrufflesom
        executions: RTruffleSOM-jit-experiments

    SOM-steady-interp-trufflesom:
        executions:
            - TruffleSOM-interp-experiments:
                benchmark:  macro-steady-trufflesom-interp
            # Not used, see reasoning at the VM definition.
            #- TruffleSOM-interp-graal-experiments:
            #    benchmark:  macro-steady-trufflesom-interp
            - RTruffleSOM-interp-experiments:
                benchmark:  macro-steady-rtrufflesom-interp
    fluctuations:
        benchmark: macro-steady-trufflesom-fluctuations
        executions:
            - TruffleSOM-graal-nobg-compilation
